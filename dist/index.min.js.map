{"version":3,"sources":["index.js"],"names":["dropZone","document","querySelector","fileInput","browseBtn","bgProgress","progressPercent","progressContainer","progressBar","sharingContainer","copyURLBtn","fileURL","emailForm","baseURL","emailURL","maxAllowedSize","concat","e","preventDefault","click","files","uploadFile","dataTransfer","length","showToast","size","classList","remove","addEventListener","console","log","add","select","toastTimer","xhr","upload","onprogress","percent","Math","innerText","formData","scaleX","style","display","onerror","event","round","loaded","total","onreadystatechange","readyState","XMLHttpRequest","onFileUploadSuccess","responseText","transform","send","status","value","DONE","removeAttribute","open","uploadURL","url","JSON","parse","res","uuid","split","headers","setAttribute","body","stringify","data","splice","emailTo","success","elements","fetch","method","Content-Type","clearTimeout","toast","json","msg","setTimeout"],"mappings":"aAAA,IAAMA,SAAWC,SAASC,cAAc,cAClCC,UAAYF,SAASC,cAAc,cADnCF,UAAWC,SAASC,cAAc,cAElCE,WAAYH,SAASC,cAAc,gBAEnCG,gBAAaJ,SAASC,cAAc,oBACpCI,kBAAkBL,SAASC,cAAc,uBACzCK,YAAAA,SAAoBN,cAASC,iBAC7BM,OAAWP,SAAGA,cAASC,WAGvBO,iBAAmBR,SAASC,cAAc,sBAC1CQ,WAAaT,SAASC,cAAc,eACpCS,QAAUV,SAASC,cAAc,YACjCU,UAAYX,SAASC,cAAc,cAInCW,MAAUZ,SAAAC,cAAA,UAEVY,QAAQ,8CAERC,UAAAA,GAAAA,OAAiBF,QAAjBE,cAFAD,SAAQ,GAAAE,OAAMH,QAAN,mBAMZV,eAAA,UAIAc,UAAEC,iBACF,QAAA,WALAf,UAAUgB,UAOVnB,SAAIoB,iBAAoB,OAAA,SAAAH,GACtBA,EAAAC,iBAEEG,IAAAA,EAAUJ,EAAAK,aAAAF,MACL,IAHPA,EAGOG,OACLC,EAAAA,GAAUC,KAAAV,gBACXZ,UAAAiB,MAAAA,EANHC,cASCG,UAAA,0BACyB,EAAjBE,EAAAA,QAdXF,UAAA,mCAkBEP,SAAEC,UAAFS,OAAA,aAMF3B,SAAS4B,iBAAiB,WAA1B,SAAuCX,GACrCjB,EAAAA,iBAEA6B,SAAQC,UAAIC,IAAA,aAMVP,SAAAA,iBAAU,YAAV,SAAAP,GACAd,SAAAA,UAAAwB,OAAsB,WACtBE,QAAAC,IAAA,gBAGH3B,UAEDyB,iBAAA,SAAA,WARE,GAAIzB,UAAUiB,MAAM,GAAGK,KAAOV,eAW9Bd,OAFFS,UAAWkB,+BACTjB,UAAQqB,MAAR,IADFX,eAAAX,WAAWkB,iBAAiB,QAAS,WAUrCjB,QAAMU,SACJQ,SAAQC,YAAI,QAEZV,UAAQjB,yBAPVQ,QAAQiB,iBAAiB,QAAS,WAYhCrB,QAAAA,WARF,IAsFI0B,WAtFEZ,WAAa,WAcjBa,QAAIC,IAAOC,wBAEThB,MAAIiB,UAAUC,MACdhC,IAAAA,EAAe,IAACiC,SAChBC,EAAMC,OAAM,SAAArB,MAAaiB,IAG1B9B,kBAEDmC,MAAAC,QAAA,QACAT,IAAIC,EAAOS,IAAAA,eAGVV,EAEDC,OAAAC,WAAA,SAAAS,GAbE,IAAIR,EAAUC,KAAKQ,MAAO,IAAMD,EAAME,OAAUF,EAAMG,OAcxDd,gBAAIe,UAAqBZ,EACvB,IAAIH,EAAIgB,UAAAA,OAAcC,EAAAA,IAAdD,KACNE,WAAAA,MAAAA,UAAwBC,EACzB7C,YAAAkC,MAAAY,UAAAb,GAIHP,EAAIqB,OAAKf,QAAT,WArCFhB,UAAA,oBAAAR,OAAAkB,EAAAsB,OAAA,MA0BIrD,UAAUsD,MAAQ,IAgBpBD,EAAAA,mBAAmB,WAXbtB,EAAIgB,YAAcC,eAAeO,MAcvC9C,oBAAa+C,EAAbN,eALmCnB,EAAA0B,KAAA,OAAAC,WAAA3B,EASrB4B,KATqBtB,IAWnC/B,oBAAuBkC,SAAAA,GACvBhC,UAAQ8C,MAAQK,GAZlBN,OAAAjB,UAAA,WAgBEtB,UAAEC,GAAAA,gBAAkB,YAEpBN,UAAA,GAAA2B,UAAA,OAXAhC,kBAAkBmC,MAAMC,QAAU,OAID,IASpBJ,EAAbwB,KAAyBC,MAAAC,GAAzBrD,KAEAiB,QAASC,IAAGnB,GAEZF,iBAAiBiC,MAAAC,QAAA,QACfuB,QAAMJ,MAAIK,GADKvD,UAAjBgB,iBAAA,SAAA,SAAAX,GAKAY,EAAAA,iBAGEuC,UAAO,GAAEC,aAAA,WAAA,QACPzD,UAAA,GAAA2B,UAAgB,UAElB+B,IAEM9B,EAAS,CAPjB0B,KAKYvD,QAAC4D,MAGLJ,MAACK,KAADC,QAAU,EAAA,GAAA,GACdC,QAASC,UAASC,SAAA,YAAAnB,MAChBjC,UAASZ,UAACgE,SAAV,cAAAnB,OAED5B,QAAAC,IAAAU,GACFqC,MAbH/D,SAAA,CAfFgE,OAAA,OA+BI7C,QAAAA,CAbE8C,eAAgB,oBAgBpBC,KAAAA,KAAa/C,UAADO,KAEZyC,KAAMvD,SAAAA,GAAAA,OAAUK,EAAImD,SACpBjD,KAAAA,SAAAA,GACQP,EAAAA,UACLF,UAFH,cAJFf,iBAAAiC,MAAAC,QAAA,YAAA,IAAMnB,UAAY,SAAC2D,GACjBH,aAAa/C,YACbgD,MAAM1C,UAAY4C,EAClBF,MAAMvD,UAAUK,IAAI,QACpBE,WAAamD,WAAW,WACtBH,MAAMvD,UAAUC,OAAO,SACtB","file":"index.min.js","sourcesContent":["const dropZone = document.querySelector(\".drop-zone\");\r\nconst fileInput = document.querySelector(\"#fileInput\");\r\nconst browseBtn = document.querySelector(\"#browseBtn\");\r\n\r\nconst bgProgress = document.querySelector(\".bg-progress\");\r\nconst progressPercent = document.querySelector(\"#progressPercent\");\r\nconst progressContainer = document.querySelector(\".progress-container\");\r\nconst progressBar = document.querySelector(\".progress-bar\");\r\nconst status = document.querySelector(\".status\");\r\n\r\nconst sharingContainer = document.querySelector(\".sharing-container\");\r\nconst copyURLBtn = document.querySelector(\"#copyURLBtn\");\r\nconst fileURL = document.querySelector(\"#fileURL\");\r\nconst emailForm = document.querySelector(\"#emailForm\");\r\n\r\nconst toast = document.querySelector(\".toast\");\r\n\r\nconst baseURL = \"https://file-sharing-personal.herokuapp.com\";\r\nconst uploadURL = `${baseURL}/api/files`;\r\nconst emailURL = `${baseURL}/api/files/send`;\r\n\r\nconst maxAllowedSize = 100 * 1024 * 1024; //100mb\r\n\r\n\r\nbrowseBtn.addEventListener(\"click\", () => {\r\n  fileInput.click();\r\n});\r\n\r\ndropZone.addEventListener(\"drop\", (e) => {\r\n  e.preventDefault();\r\n  //   console.log(\"dropped\", e.dataTransfer.files[0].name);\r\n  const files = e.dataTransfer.files;\r\n  if (files.length === 1) {\r\n    if (files[0].size < maxAllowedSize) {\r\n      fileInput.files = files;\r\n      uploadFile();\r\n    } else {\r\n      showToast(\"Max file size is 100MB\");\r\n    }\r\n  } else if (files.length > 1) {\r\n    showToast(\"You can't upload multiple files\");\r\n  }\r\n  dropZone.classList.remove(\"dragged\");\r\n});\r\n\r\ndropZone.addEventListener(\"dragover\", (e) => {\r\n  e.preventDefault();\r\n  dropZone.classList.add(\"dragged\");\r\n\r\n  // console.log(\"dropping file\");\r\n});\r\n\r\ndropZone.addEventListener(\"dragleave\", (e) => {\r\n  dropZone.classList.remove(\"dragged\");\r\n\r\n  console.log(\"drag ended\");\r\n});\r\n\r\n// file input change and uploader\r\nfileInput.addEventListener(\"change\", () => {\r\n  if (fileInput.files[0].size > maxAllowedSize) {\r\n    showToast(\"Max file size is 100MB\");\r\n    fileInput.value = \"\"; // reset the input\r\n    return;\r\n  }\r\n  uploadFile();\r\n});\r\n\r\n// sharing container listenrs\r\ncopyURLBtn.addEventListener(\"click\", () => {\r\n  fileURL.select();\r\n  document.execCommand(\"copy\");\r\n  showToast(\"Copied to clipboard\");\r\n});\r\n\r\nfileURL.addEventListener(\"click\", () => {\r\n  fileURL.select();\r\n});\r\n\r\nconst uploadFile = () => {\r\n  console.log(\"file added uploading\");\r\n\r\n  files = fileInput.files;\r\n  const formData = new FormData();\r\n  formData.append(\"myfile\", files[0]);\r\n\r\n  //show the uploader\r\n  progressContainer.style.display = \"block\";\r\n\r\n  // upload file\r\n  const xhr = new XMLHttpRequest();\r\n\r\n  // listen for upload progress\r\n  xhr.upload.onprogress = function (event) {\r\n    // find the percentage of uploaded\r\n    let percent = Math.round((100 * event.loaded) / event.total);\r\n    progressPercent.innerText = percent;\r\n    const scaleX = `scaleX(${percent / 100})`;\r\n    bgProgress.style.transform = scaleX;\r\n    progressBar.style.transform = scaleX;\r\n  };\r\n\r\n  // handle error\r\n  xhr.upload.onerror = function () {\r\n    showToast(`Error in upload: ${xhr.status}.`);\r\n    fileInput.value = \"\"; // reset the input\r\n  };\r\n\r\n  // listen for response which will give the link\r\n  xhr.onreadystatechange = function () {\r\n    if (xhr.readyState == XMLHttpRequest.DONE) {\r\n      onFileUploadSuccess(xhr.responseText);\r\n    }\r\n  };\r\n\r\n  xhr.open(\"POST\", uploadURL);\r\n  xhr.send(formData);\r\n};\r\n\r\nconst onFileUploadSuccess = (res) => {\r\n  fileInput.value = \"\"; // reset the input\r\n  status.innerText = \"Uploaded\";\r\n\r\n  // remove the disabled attribute from form btn & make text send\r\n  emailForm[2].removeAttribute(\"disabled\");\r\n  emailForm[2].innerText = \"Send\";\r\n  progressContainer.style.display = \"none\"; // hide the box\r\n\r\n  const { file: url } = JSON.parse(res);\r\n  console.log(url);\r\n  sharingContainer.style.display = \"block\";\r\n  fileURL.value = url;\r\n};\r\n\r\nemailForm.addEventListener(\"submit\", (e) => {\r\n  e.preventDefault(); // stop submission\r\n\r\n  // disable the button\r\n  emailForm[2].setAttribute(\"disabled\", \"true\");\r\n  emailForm[2].innerText = \"Sending\";\r\n\r\n  const url = fileURL.value;\r\n\r\n  const formData = {\r\n    uuid: url.split(\"/\").splice(-1, 1)[0],\r\n    emailTo: emailForm.elements[\"to-email\"].value,\r\n    emailFrom: emailForm.elements[\"from-email\"].value,\r\n  };\r\n  console.log(formData);\r\n  fetch(emailURL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(formData),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      if (data.success) {\r\n        showToast(\"Email Sent\");\r\n        sharingContainer.style.display = \"none\"; // hide the box\r\n      }\r\n    });\r\n});\r\n\r\nlet toastTimer;\r\n// the toast function\r\nconst showToast = (msg) => {\r\n  clearTimeout(toastTimer);\r\n  toast.innerText = msg;\r\n  toast.classList.add(\"show\");\r\n  toastTimer = setTimeout(() => {\r\n    toast.classList.remove(\"show\");\r\n  }, 2000);\r\n};"]}